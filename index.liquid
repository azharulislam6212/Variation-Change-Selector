
{%- liquid
  
     assign product = all_products[section.settings.select_product] 
    -%}

{%- form 'product', product, class: 'single-product-form', id: product_form_id, novalidate: 'novalidate' -%}
                    <input type="hidden"  name="id"  value="{{ product.selected_or_first_available_variant.id }}">
                    {% assign current_variant = product.selected_or_first_available_variant %}
                   
                <div class="gilley-product-varient">
                    {% unless product.has_only_default_variant %}
                        {%- for option in product.options_with_values -%}

                            {%- liquid
                              assign option_disabled = true
                          
                              for option1_name in variants_option1_arr
                                case option.position
                                  when 1
                                    if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                  when 2
                                    if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                  when 3
                                    if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                endcase
                              endfor
                            -%}
                            <div class="dropdown option-{{ option.name }}">
                                <span class="sub-title">{{ option.name }}</span>
                                <select class="select-btn">
                                    {% assign values = '' %}
                                    {% assign option_index = 0 %}
                                    {% for variant in product.variants %}
                                      {% assign value = variant.options[option_index] %}
                                      {% assign values = values | join: ',' %}
                                      {% assign values = values | append: ',' | append: value %}
                                      {% assign values = values | split: ',' %}
                                    <option value="{{ value | escape }}" {% if option.selected_value == value %} selected="selected" {% endif %}>{{ value | escape }}</option>
                                {% endfor %}
                                 
                                </select>
                            </div>
                        {% endfor %}
                       {% endunless %}
                        <div class="quantity-count-wrap">
                            <span class="sub-title">Quantity</span>
                                <div>
                                    <button type="button" class="minus" onclick="decreaseCount(event, this)">-</button>
                                    <input name="quantity" class="quantity input-num"  min="0"  type="number" value="1">
                                    <button type="button" class="plus" onclick="increaseCount(event, this)" >+</button>
                                </div>
                        </div>
                </div>
                <a href="javascript:void(0)" class="add-btn">
                    <div class="related-item-price">
                        <em class="price"> {{ product.price | money }}</em>
                    </div>
                    <span>Add to cart</span>
                
                </a>
            {%- endform -%}



<script>
      let shopCurrencySign = {{ cart.currency.symbol | json }};
    </script>

   {% unless product == empty %}
        <script type="application/json" data-product-json>
          {{ product | json }}
        </script>
    {% endunless %}
<script>
var datajson = document.querySelector('script[data-product-json]');
if(datajson != null){
    var product_encodedObject = document.querySelector('script[data-product-json]').textContent;
    var product_dataObject = JSON.parse(product_encodedObject);
    var variants = product_dataObject.variants;
    let userSelectValues = [...variants];


    $('.select-btn').on('change', function() {
        userSelectValues = [];
        userSelectValues.push(this.value);

          let matchedVariants = variants.find(variant => {
                let match = true;
                    
                for (let i = 0; i < userSelectValues.length; i++) {
                    if (userSelectValues.indexOf(variant.options[i]) == -1) {
                        match = false;
                        break;
                    }
                }
                
                return match;
            });

          
            document.querySelector('.single-product-form input[name="id"]').value = matchedVariants.id;
    
            var price =   document.querySelector('.related-item-price .price');


            if(price != null ){
                price.innerHTML = `${shopCurrencySign}${(matchedVariants.price / 100).toFixed(2)}`;
              }

            if( matchedVariants.featured_image != null){

                $(".selectric .label").addClass('active');
            
              $(".selectric .label").css({ "--url": 'url('+matchedVariants.featured_image.src+')' });

            }else{
                $(".selectric .label").removeClass('active');
            }
      });

}
     </script>
